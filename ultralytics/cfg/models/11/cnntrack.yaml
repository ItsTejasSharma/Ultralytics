# Ultralytics YOLO11 object detection model with Swin-T backbone
# Parameters
nc: 80  # number of classes
scales:
  m: [0.50, 1.00, 512]  # using medium scale

# Backbone with Swin-T
backbone:
  - [-1, 1, TorchVision, [768, swin_t, DEFAULT, True, 5, True]]    # 0 - Swin-T
  - [0, 1, Index, [192, 4]]                                        # 1 - P3/8 (192 channels)
  - [-1, 1, torchvision.ops.Permute, [[0, 3, 1, 2]]]               # 2 - Permute
  - [0, 1, Index, [384, 6]]                                        # 3 - P4/16 (384 channels)
  - [-1, 1, torchvision.ops.Permute, [[0, 3, 1, 2]]]               # 4 - Permute
  - [0, 1, Index, [768, 8]]                                        # 5 - P5/32 (768 channels)
  - [-1, 1, torchvision.ops.Permute, [[0, 3, 1, 2]]]               # 6 - Permute
  - [-1, 1, SPPF, [768, 5]]                                        # 7 - SPPF

# Head
head:
  # First upsample and concat (P5 -> P4)
  - [-1, 1, nn.Upsample, [None, 2, "nearest"]]                     # 8
  - [[-1, 4], 1, Concat, [1]]                                      # 9 (concat with layer 4)
  - [-1, 2, C3k2, [512, False]]                                    # 10

  # Second upsample and concat (P4 -> P3)
  - [-1, 1, nn.Upsample, [None, 2, "nearest"]]                     # 11
  - [[-1, 2], 1, Concat, [1]]                                      # 12 (concat with layer 2)
  - [-1, 2, C3k2, [256, False]]                                    # 13 (P3/8)

  # First downsample and concat (P3 -> P4)
  - [-1, 1, nn.Upsample, [None, 0.5, "nearest"]]                                     # 14
  - [[-1, 10], 1, Concat, [1]]                                     # 15 (concat with layer 10)
  - [-1, 2, C3k2, [512, False]]                                    # 16 (P4/16)

  # Second downsample and concat (P4 -> P5)
  - [-1, 1, nn.Upsample, [None, 0.5, "nearest"]]                                     # 17
  - [[-1, 7], 1, Concat, [1]]                                      # 18 (concat with layer 7)
  - [-1, 2, C3k2, [1024, True]]                                    # 19 (P5/32)

  # Detect layer
  - [[13, 16, 19], 1, Detect, [nc]]                                # 20 (Detect(P3, P4, P5))
